/**
* BASE
* Foundational styles
*
* normalize:   reset the browsers
* variables:   site-wide variables such as fonts, colors, widths, etc.
* base:        styles are applied directly to element using an element selector
* utilities:   styles that are not reflective of the application state
* links:       universal link and link modifiers
* text:        universal text and content styles
*
*/
@import "normalize.css";
@import "./base/variables.css";
@import "./base/base.css";
@import "./base/text.css";

/**
 * COMPONENTS
 * Discrete components of the page: such as navigation, alert dialogs, buttons, etc.
 * Any new feature or component will be added to this section.
 * Ideally there is a 1:1 relationship between src/components and styles/components
 *
 * button:       .Button classes
 * hero:         .Hero section of the homepage
 * markdown:     <Markdown /> styles, including the internal pages and their links
 * page:         <Page /> styles
 * playground:   <Playground /> styles and CodeMirror theme
 * prism:        color theme for prism syntax highlighting (third-party)
 * sidebar:      <Sidebar /> styles, including the .Nav classes
 *
 */
@import "./components/button.css";
@import "./components/footer.css";
@import "./components/header.css";
@import "./components/hero.css";
@import "./components/markdown.css";
@import "./components/page.css";
@import "./components/playground.css";
@import "./components/prism.css";
@import "./components/sidebar.css";

/**
 * LAYOUT
 * Determine how sections of the page are structured
 *
 * grid:   global Layout and Structure
 *
 */
@import "./layout/grid.css";

/**
 * STATES
 * Augment and override all other styles, such as whether an element
 * is expanded or collapsed, or if the element is in an error or active state
 *
 * active:   The active states for Nav links
 *
 */
@import "./states/active.css";

/* Utilities must always be last, so that they can override the above */
@import "./base/utilities.css";

.hr {
  border: 0;
  height: 1px;
  margin-left: auto;
  margin-right: auto;
  position: relative;
}
